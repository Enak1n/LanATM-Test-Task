// <auto-generated />
using System;
using DeliveryAPI.Infrastructure.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DeliveryAPI.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeliveryAPI.Domain.Entities.Courier", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DeliveryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Couriers");
                });

            modelBuilder.Entity("DeliveryAPI.Domain.Entities.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AddressId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CourierId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateOfCreation")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCancel")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDelivered")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsLate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsPickUp")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("CourierId");

                    b.ToTable("Deliveries");
                });

            modelBuilder.Entity("DeliveryAPI.Domain.Entities.Delivery", b =>
                {
                    b.HasOne("DeliveryAPI.Domain.Entities.Courier", "Courier")
                        .WithMany("Deliveries")
                        .HasForeignKey("CourierId");

                    b.Navigation("Courier");
                });

            modelBuilder.Entity("DeliveryAPI.Domain.Entities.Courier", b =>
                {
                    b.Navigation("Deliveries");
                });
#pragma warning restore 612, 618
        }
    }
}
